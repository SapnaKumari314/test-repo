

function ScreenPart Portion
	// Set up an easy-to-maintain property list that stores the necessary multipliers for the specified screen portion parameter value
	set screenPortions to {
		TopHalf: [[0,0],[1,.5]],

	}
	set multiplier to screenPortions.(Portion) // Retrieves the value for the key in the property list. The name of the key is passed as a parameter into the function.
	// Error handling is needed in the event that an unrecognized parameter is passed to the function
	if multiplier is empty then
		throw "Parameter error", Portion && "is not a recognized screen portion."
	end if
	return [the remoteScreenSize,the remotescreenSize] * multiplier
End ScreenPart
selectSeverURL "qa2-Nonabb"
To handle selectSeverURL ServerURL,OCPPID
	Log "Selecting server url in occp client"
	global ConfigValues
	set the searchrectangle to ScreenPart("TopHalf")
	If imagefound(text:"Server URL",waitFor:ConfigValues.MediumTimeOut)
		Click FoundImageLocation()+[60,0]
		
		put  FoundImageLocation()+[60,0] into Loc
		Put Loc +[-18,-20] into pos1
		put Loc +[180,400] into pos2
		set the searchrectangle to [pos1,pos2]
		
		Click{text:ServerURL}
		
	End if
	set the searchrectangle to empty
	Log "Selecting server url in occp client is done"
	
End selectSeverURL
OCCPClientSimulator_ConnectOCPPID "qa2-Nonabb","00120C2DF6AB5666"
To handle OCCPClientSimulator_ConnectOCPPID ServerURL,OCPPID
	Log "Connecting server url in occp id"
	global ConfigValues
	set the searchrectangle to ScreenPart("TopHalf")
	If imagefound(text:ServerURL,waitFor:ConfigValues.MediumTimeOut)
		Click FoundImageLocation()+[200,0]
		Typetext controlKey,a
		Typetext deletekey
		typetext OCPPID 
		wait 2
		"Utilities/CommonActions".ClickLeftOfTextLocation "Not Connected", "80"
	End if
	Log "Connecting to the ocpp id is done"
	
End OCCPClientSimulator_ConnectOCPPID


